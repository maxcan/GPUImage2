db.DocRead.find({readerId:ObjectId("535f0361c3f02f42a1000192")}).explain()
db.Doc.find({name:'sdf'}).explain()
db.DocRead.find({start:'sdf'}).explain()
db.dropDatabase()
db.Contact.find()
it
db.dropDatabase()
db.Page.find()
db.dropDatabase()
db.Page.find().pretty()
q
db.Page.update({},{$unset: {thumb: {}}})
db.Page.find().pretty()
db.Page.update({},{thumb: {$unset: {}}})
db.Page.update({},{$unset: {thumb: {}}})
db.Page.update({},{$unset: {thumb: 0}})
db.Page.update({},{$unset: {thumb: 1}})
db.Page.find().pretty()
db.Page.update({},{$unset: {thumb: 1}}, {multi:true})
db.Page.find().pretty()
it
db.Page.update({},{$unset: {thumb: 1}}, {multi:true})
db.dropDatabase()
db.User.find({_id:'536c63cb9a026a00010001da'})
db.User.find({_id:'536c63cb9a026a00010001da'}))
db.User.find({_id:ObjectId('536c63cb9a026a00010001da'}))
db.User.find({_id:ObjectId('536c63cb9a026a00010001da')})
db.dropDatabase()
db.Link.find()
db.Link.find({},{token: 1})
db.Link.find({},{token: 1})
show databases
use varys_production
db.Link.find({},{token: 1})
db.dropDatabase()
db.Doc.find()
db.Doc.find({name:'DOX disaster recovery plan'}_ )
db.Doc.find({name:'DOX disaster recovery plan'})
db.Link.find({},{opts:1})
it
db.Link.find({},{"opts.emailSettings":1})
it
i
it
db.User.find({},{"opts.emailSettings":1})
it
db.dropDatabase()
show collections
db.MetricsThread.find()
db.dropDatabase()
db.MetricsThread.find()
db.dropDatabase()
db.MetricsThread.find()
db.dropDatabase()
db.MetricsThread.find()
0
db.dropDatabase()
db.DocRead.find()
db.DocRead.find().pretty()
db.Doc.find()
db.Doc.find({authLevel: 'DocAuthAfterFirst'})
db.Doc.find({authLevel: 'DocAuthAfterFirst'}).map(function(e) { return e.ownerId } )
var ownerIds = db.Doc.find({authLevel: 'DocAuthAfterFirst'}).map(function(e) { return e.ownerId } )
db.User.find({_id : {"$in": ownerIds}})
var ownerIds = db.Doc.find({authLevel: 'DocAuthAlways'}).map(function(e) { return e.ownerId } )
db.User.find({_id : {"$in": ownerIds}})
ownerID
ownerIds
db.Doc.find({ownerId: ObjectId("53234da759bfba0001000054")})
db.Doc.find({authLevel: 'DocAuthAfterFirst'})
it
db.Doc.find({authLevel: 'DocAuthAfterFirst'}).count()
db.Doc.find({authLevel: 'DocAuthAfterFirst', $not:{deletedDt:1}}).count()
db.Doc.find({authLevel: 'DocAuthAfterFirst' , deletedDt:  { $exists: false}}).count()
db.Doc.find({authLevel: 'DocAuthAfterFirst' , deletedDt:  { $exists: false}})
it
db.Doc.find({authLevel: 'DocAuthAfterFirst' , deletedDt:  { $exists: false}}).batchSize(44)
it
var ownerIds = db.Doc.find({authLevel: 'DocAuthAlways', deletedDt:  { $exists: false}}).map(function(e) { return e.ownerId } )
db.User.find({_id : {"$in": ownerIds}})
ownerIds
var ownerIds = db.Doc.find({authLevel: 'DocAuthAlways', deletedDt:  { $exists: false}}).map(function(e) { return e.ownerId } )
ownerIds
var ownerIds = db.Doc.find({authLevel: 'DocAuthAlways', deletedDt:  { $exists: false}})
ownerIds
var ownerIds = db.Doc.find({authLevel: 'DocAuthAfterFirst', deletedDt:  { $exists: false}}).map(function(e) { return e.ownerId } )
ownerIds
ownerIds.length
db.User.find({_id : {"$in": ownerIds}})
db.Doc.find({authLevel: 'DocAuthAlways', deletedDt:  { $exists: false}})
db.User.find({_id : {"$in": ownerIds}, email: {$notin: ['max@docmunch.com'] }})
db.User.find({_id : {"$in": ownerIds}, email: {$not: ['max@docmunch.com'] }})
db.User.find({_id : {"$in": ownerIds}, email: {$nin: ['max@docmunch.com'] }})
db.User.find({_id : {"$in": ownerIds}, email: {$nin: ['info@usedox.com','i123@cantor.mx','sean@daggerboardinc.com','max@docmunch.com'] }})
var fowners = db.User.find({_id : {"$in": ownerIds}, email: {$nin: ['info@usedox.com','i123@cantor.mx','sean@daggerboardinc.com','max@docmunch.com'] }})
var fowners = db.User.find({_id : {"$in": ownerIds}, email: {$nin: ['info@usedox.com','i123@cantor.mx','sean@daggerboardinc.com','max@docmunch.com'] }}).map(function(e) { return e._id})
fowners
db.Doc.find({ownerId: {$in: fowners}, authLevel: 'DocAuthAfterFirst'})
db.dropDatabase()
